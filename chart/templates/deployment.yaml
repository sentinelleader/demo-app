apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: deepak-demo-app-{{ .Values.app.labelSuffix }}
  labels:
    app: webapp-{{ .Values.app.labelSuffix }}
  namespace: dk
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: webapp-{{ .Values.app.labelSuffix }}
  template:
    metadata:
      labels:
        app: webapp-{{ .Values.app.labelSuffix }}
    spec:
      serviceAccountName: deepak-demo-app-{{ .Values.app.labelSuffix }}
      containers:
        - name: deepak-demo-app-{{ .Values.app.labelSuffix }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/webapp"]
          args: [
            "-licenseKeyFile",
            "/etc/newrelic/licenseKey",
            {{ if eq .Values.app.labelSuffix "pm" }}
            "-useProm"
            {{ end }}
          ]
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          volumeMounts:
            - name: newrelic-secret
              mountPath: /etc/newrelic
      volumes:
        - name: newrelic-secret
          secret:
            secretName: newrelic-license
  strategy:
    canary:
      steps:
      - setWeight: 25
      - pause: { duration: 10m }
      {{ if eq .Values.app.labelSuffix "nr" }}
      - analysis:
          templates:
          - templateName: webapp-success-rate
          args:
          - name: service-name
            value: deepak-demo-app-svc.default.svc.cluster.local
      {{ end }}
      {{ if eq .Values.app.labelSuffix "pm" }}
      - analysis:
          templates:
          - templateName: webapp-success-rate-pm
          args:
          - name: service-name
            value: deepak-demo-app-svc.default.svc.cluster.local
      {{ end }}
      - setWeight: 40
      - pause: {duration: 40s}
      - setWeight: 60
      - pause: {duration: 20s}
      - setWeight: 80
      - pause: {duration: 20s}
